- name: create nomad directory
  file: >
    state=directory
    path={{ item }}
  with_items:
    - "{{ alloc_data_dir }}"
    - "{{ config_dir }}"
    - "{{ logs_dir }}"
    - "{{ nomad_home }}"
    - "{{ nomad_move_to }}"
  tags: [nomad]

- name : Copy nomad configuration file
  copy:
    src: "{{ config_file }}"
    dest: "{{ config_dir }}"
    owner: root
    group: root
    mode: 0644
  tags: [nomad]

- name: check archive stat
  stat: path={{ nomad_download_folder }}/{{ nomad_archive }}
  register: nomad_archive_stat

- name: download nomad
  get_url: >
    url={{nomad_download}}
    dest={{nomad_download_folder}}
    url_username={{ nomad_download_username }}
    url_password={{ nomad_download_password }}
  register: nomad_was_downloaded
  when: nomad_archive_stat.stat.exists == False
  tags: [nomad]

- name: check bin stat
  stat: path={{ nomad_move_to}}/nomad
  register: nomad_bin_stat

- name: copy and unpack
  unarchive: >
    src={{ nomad_download_folder }}/{{ nomad_archive }}
    dest={{ nomad_move_to }}
    remote_src=yes
  when: nomad_bin_stat.stat.exists == False
  tags: [nomad]

- name: Start nomad
  shell: "nohup {{ nomad_move_to }}/nomad agent -dev -config={{ config_dir }}/{{ config_file }}
    >{{ logs_dir }}/nomad.log 2>&1 &"
  tags: [nomad]

- name: Check if Nomad is running
  shell: ps aux | grep "nomad agent" | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: service_nomad_status
  tags: [nomad]

- name: Report status of nomad
  fail:
    msg: |
      Nomad is not running.
      Return code from `grep`:
      {{ service_nomad_status.rc }}
  when: service_nomad_status.rc != 0
  tags: [nomad]

